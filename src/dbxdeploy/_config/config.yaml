parameters:
  dbxdeploy:
    poetry:
      path: '~/.poetry/bin/poetry'
    browser:
      path: 'c:/Program Files (x86)/Google/Chrome/Application/chrome.exe'
      arguments: ['-d', '{runUrl}']
    git:
      dev_branch: 'master'
    databricks:
      cluster_id: # deprecated, will be removed in 2.0; use CLI argument to defined cluster_id instead
    source:
      notebooks:
        base_dir: 'src/%daipe.root_module.name%'
        patterns: ['**/*.py']
        consumers_patterns: ['**/*.consumer.py']
        master_package_notebook_path: '%dbxdeploy.source.notebooks.base_dir%/app/install_master_package.py'
        cell_separator: 'command' # command or percent
    target:
      storage: 'dbfs'
      workspace:
        base_dir: '/{current_branch}'
        release_path: '%dbxdeploy.target.workspace.base_dir%/{current_time}_{random_string}'
        current_path: '%dbxdeploy.target.workspace.base_dir%/_current'
      package:
        base_dir: 'dbfs:/FileStore/jars'
        deploy_path: '%dbxdeploy.target.package.base_dir%/{package_name}/{current_time}_{random_string}/{package_filename}'
        release_path: '%dbxdeploy.target.package.base_dir%/{package_name}/{current_time}_{random_string}/{package_filename}'
        dependencies_deploy_path: '%dbxdeploy.target.package.base_dir%/{package_name}/dependencies/{package_filename}'
        dependencies_release_path: '%dbxdeploy.target.package.release_path%'
        offline_install: False
        build:
          databricks:
            host: '%dbxdeploy.databricks.host%'
            token: '%dbxdeploy.databricks.token%'
            job_cluster_definition:
              spark_version: '7.3.x-scala2.12'
              node_type_id: 'Standard_DS3_v2'
              num_workers: 1
    export:
      force_end_file_newline: False
      black:
        enabled: True

services:
  dbxdeploy.cluster.ClusterRestarter:
    arguments:
      - '@consolebundle.logger'
      - '@dbxdeploy.databricks_api'

  dbxdeploy.dbfs.DbfsFileUploader:
    arguments:
      - '@dbxdeploy.databricks_api'
    tags:
      - {name: 'dbxdeploy.package.uploader', alias: 'dbfs'}

  dbxdeploy.dbfs.DbfsUploadCommand:
    arguments:
      - '@consolebundle.logger'
      - '@dbxdeploy.databricks.dbfs_api'
    tags:
      - 'console.command'

  dbxdeploy.deploy.WorkingDirFactory:

  dbxdeploy.deploy.working_dir:
    class: pathlib.Path
    factory: ['@dbxdeploy.deploy.WorkingDirFactory', 'create']

  dbxdeploy.deploy.CurrentAndReleaseDeployer:

  dbxdeploy.deploy.Deployer:
    arguments:
      - '@dbxdeploy.deploy.working_dir'

  dbxdeploy.deploy.DeployCommand:
    arguments:
      - '%dbxdeploy.databricks.host%'
      - '@dbxdeploy.target.workspace.base_dir'
      - '@consolebundle.logger'
    tags:
      - 'console.command'

  dbxdeploy.deploy.DeployerJobSubmitter:
    arguments:
      - '@dbxdeploy.deploy.working_dir'

  dbxdeploy.deploy.DeployJobSubmitCommand:
    arguments:
      - '%dbxdeploy.databricks.cluster_id%'
      - '@consolebundle.logger'
      - !tagged_aliased ['dbxdeploy.notebook.converter', '%dbxdeploy.source.notebooks.cell_separator%']
    tags:
      - 'console.command'

  dbxdeploy.deploy.Releaser:
    arguments:
      - '@dbxdeploy.deploy.working_dir'
      - '@consolebundle.logger'

  dbxdeploy.deploy.ReleaseCommand:
    arguments:
      - '%dbxdeploy.databricks.cluster_id%'
      - '%dbxdeploy.databricks.host%'
      - '@dbxdeploy.target.workspace.base_dir'
      - '@consolebundle.logger'
    tags:
      - 'console.command'

  dbxdeploy.deploy.MasterPackageDeployer:
    arguments:
      - '@dbxdeploy.deploy.working_dir'
    tags:
      - 'console.command'

  dbxdeploy.deploy.MasterPackageBuilder:
    tags:
      - 'console.command'

  dbxdeploy.deploy.DependencyBuilderCommand:
    arguments:
      - '@dbxdeploy.deploy.working_dir'
    tags:
      - 'console.command'

  dbxdeploy.deploy.TargetPathsResolver:
    arguments:
      - '%dbxdeploy.target.package.deploy_path%'
      - '%dbxdeploy.target.package.release_path%'
      - '%dbxdeploy.target.package.dependencies_deploy_path%'
      - '%dbxdeploy.target.package.dependencies_release_path%'
      - '%dbxdeploy.target.workspace.release_path%'
      - '%dbxdeploy.target.workspace.current_path%'

  dbxdeploy.deploy.LocalPathsResolver:
    arguments:
      - '@dbxdeploy.deploy.working_dir'

  dbxdeploy.git.CurrentBranchResolver:

  dbxdeploy.git.CurrentRepositoryFactory:
    arguments:
      - '@dbxdeploy.deploy.working_dir'

  dbxdeploy.package.BootstrapConfigAppender:

  dbxdeploy.package.CodeStyleLoader:
    arguments:
      - '@dbxdeploy.deploy.working_dir'

  dbxdeploy.package.LockedPyprojectCreator:

  dbxdeploy.package.PackageMetadataLoader:

  dbxdeploy.package.PackageDependencyLoader:

  dbxdeploy.package.PackageBuilder:
    arguments:
      - '@dbxdeploy.deploy.working_dir'
      - '%dbxdeploy.target.package.offline_install%'

  dbxdeploy.package.DependencyBuilder:
    arguments:
      - '@dbxdeploy.deploy.working_dir'
      - '@consolebundle.logger'
      - '@dbxdeploy.package.dependency_builder.databricks_api'
      - '@dbxdeploy.package.dependency_builder.DbfsFileUploader'
      - '@dbxdeploy.package.dependency_builder.DbfsFileDownloader'
      - '%dbxdeploy.target.package.build.databricks.job_cluster_definition%'

  dbxdeploy.package.PackageDeployer:
    arguments:
      - '@dbxdeploy.deploy.working_dir'
      - '%dbxdeploy.target.package.offline_install%'
      - '@consolebundle.logger'
      - !tagged_aliased ['dbxdeploy.package.uploader', '%dbxdeploy.target.storage%']

  dbxdeploy.package.PackageInstaller:
    arguments:
      - '%dbxdeploy.target.package.base_dir%'
      - '%dbxdeploy.target.package.offline_install%'

  dbxdeploy.package.PackageIndexResolver:
    arguments:
      - '@dbxdeploy.deploy.working_dir'

  dbxdeploy.package.RequirementsGenerator:
    arguments:
      - '@dbxdeploy.deploy.working_dir'

  dbxdeploy.package.RequirementsLineConverter:

  dbxdeploy.package.dependency_builder.databricks_api:
    class: databricks_api.databricks.DatabricksAPI
    autowire: False
    arguments:
      host: '%dbxdeploy.target.package.build.databricks.host%'
      token: '%dbxdeploy.target.package.build.databricks.token%'

  dbxdeploy.package.dependency_builder.DbfsFileUploader:
    class: dbxdeploy.dbfs.DbfsFileUploader
    arguments:
      - '@dbxdeploy.package.dependency_builder.databricks_api'

  dbxdeploy.package.dependency_builder.DbfsFileDownloader:
    class: dbxdeploy.dbfs.DbfsFileDownloader
    arguments:
      - '@dbxdeploy.package.dependency_builder.databricks_api'

  dbxdeploy.dbc.DbcCreator:
    arguments:
      - '@dbxdeploy.deploy.working_dir'
      - '@consolebundle.logger'
      - !tagged_aliased ['dbxdeploy.notebook.converter', '%dbxdeploy.source.notebooks.cell_separator%']

  dbxdeploy.dbc.DbcNotebookConverter:
    arguments:
      - !tagged_aliased ['dbxdeploy.notebook.converter', '%dbxdeploy.source.notebooks.cell_separator%']

  dbxdeploy.dbc.DbcUploader:
    arguments:
      - '@dbxdeploy.databricks_api'

  dbxdeploy.dbc.PathsPreparer:

  dbxdeploy.dbc.CommandsConverter:
    arguments:
      - '%dbxdeploy.export.force_end_file_newline%'
      - '@consolebundle.logger'

  dbxdeploy.dbc.CommandConverter:

  dbxdeploy.notebook.NotebooksDeployer:
    arguments:
      - '@dbxdeploy.target.workspace.base_dir'
      - '@consolebundle.logger'
      - '@dbxdeploy.databricks_api'

  dbxdeploy.job.JobsDeleter:
    arguments:
      - '@consolebundle.logger'
      - '@dbxdeploy.databricks_api'

  dbxdeploy.job.JobsDeleterCommand:
    arguments:
      - '%dbxdeploy.databricks.cluster_id%'
      - '@consolebundle.logger'
    tags:
      - 'console.command'

  dbxdeploy.job.JobCreator:
    arguments:
      - '@consolebundle.logger'
      - '@dbxdeploy.databricks_api'

  dbxdeploy.job.JobsCreatorAndRunner:
    arguments:
      - '@consolebundle.logger'
      - '@dbxdeploy.databricks_api'

  dbxdeploy.job.JobSubmitter:
    arguments:
      - '@dbxdeploy.target.workspace.base_dir'
      - '%dbxdeploy.browser%'
      - '@consolebundle.logger'
      - '@dbxdeploy.databricks_api'

  dbxdeploy.job.RunsGetter:
    arguments:
      - '@dbxdeploy.target.workspace.base_dir'
      - '@dbxdeploy.databricks_api'

  dbxdeploy.job.NotebookKiller:
    arguments:
      - '@consolebundle.logger'
      - '@dbxdeploy.databricks_api'

  dbxdeploy.databricks_api:
    class: databricks_api.databricks.DatabricksAPI
    autowire: False
    arguments:
      host: '%dbxdeploy.databricks.host%'
      token: '%dbxdeploy.databricks.token%'

  dbxdeploy.databricks.client:
    class: databricks_cli.sdk.ApiClient
    autowire: False
    arguments:
      host: '%dbxdeploy.databricks.host%'
      token: '%dbxdeploy.databricks.token%'

  dbxdeploy.databricks.dbfs_api:
    class: databricks_cli.dbfs.api.DbfsApi
    arguments:
      - '@dbxdeploy.databricks.client'

  dbxdeploy.notebook.CurrentDirectoryUpdater:
    arguments:
      - '@dbxdeploy.target.workspace.base_dir'
      - '%dbxdeploy.git.dev_branch%'
      - '@consolebundle.logger'
      - '@dbxdeploy.databricks_api'
      - !tagged_aliased ['dbxdeploy.notebook.converter', '%dbxdeploy.source.notebooks.cell_separator%']

  dbxdeploy.workspace.WorkspaceBaseDirFactory:
    arguments:
      - '%dbxdeploy.target.workspace.base_dir%'

  dbxdeploy.target.workspace.base_dir:
    class: pathlib.PurePosixPath
    factory: ['@dbxdeploy.workspace.WorkspaceBaseDirFactory', 'create']

  dbxdeploy.workspace.WorkspaceImporter:
    arguments:
      - '@dbxdeploy.databricks_api'

  dbxdeploy.workspace.WorkspaceExporter:
    arguments:
      - '@dbxdeploy.databricks_api'

  dbxdeploy.workspace.WorkspaceExportCommand:
    arguments:
      - '@dbxdeploy.target.workspace.base_dir'
      - '@dbxdeploy.deploy.working_dir'
      - '%dbxdeploy.source.notebooks.base_dir%'
      - '@consolebundle.logger'
      - !tagged_aliased ['dbxdeploy.notebook.converter', '%dbxdeploy.source.notebooks.cell_separator%']
    tags:
      - 'console.command'

  dbxdeploy.workspace.DbcFilesHandler:

  dbxdeploy.notebook.NotebooksLocator:
    arguments:
      - '@dbxdeploy.deploy.working_dir'
      - '%dbxdeploy.source.notebooks.base_dir%'
      - '%dbxdeploy.source.notebooks.patterns%'
      - '%dbxdeploy.source.notebooks.consumers_patterns%'
      - '%dbxdeploy.source.notebooks.master_package_notebook_path%'

  dbxdeploy.notebook.RelativePathResolver:
    arguments:
      - '%dbxdeploy.source.notebooks.base_dir%'

  dbxdeploy.notebook.converter.JinjaTemplateLoader:

  dbxdeploy.notebook.converter.DbcScriptRenderer:

  dbxdeploy.notebook.converter.CellsExtractor:

  dbxdeploy.notebook.converter.CommandSeparatorConverter:
    tags:
      - { name: 'dbxdeploy.notebook.converter', alias: 'command' }

  dbxdeploy.notebook.converter.PercentSeparatorConverter:
    tags:
      - { name: 'dbxdeploy.notebook.converter', alias: 'percent' }

  dbxdeploy.poetry.PoetryPathResolver:
    arguments:
      - '%dbxdeploy.poetry.path%'

  dbxdeploy.black.BlackChecker:
    arguments:
      - '%dbxdeploy.export.black.enabled%'
